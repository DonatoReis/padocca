name: "Stealth Web Pentest"
description: "Advanced stealth mode web penetration testing pipeline"
author: "PADOCCA Security Team"
version: "1.0.0"

# Global Settings
settings:
  # Cache Configuration
  cache:
    enabled: true
    ttl: 7200 # 2 hours

  # Advanced Stealth Configuration
  stealth:
    enabled: true
    level: 3 # 0=off, 1=low, 2=medium, 3=high, 4=paranoid
    delay_min: 2000    # Minimum delay between requests (ms)
    delay_max: 8000    # Maximum delay between requests (ms)
    randomize_user_agents: true
    use_proxies: true
    proxy_rotation: true
    fragment_packets: true
    adaptive_profile: true  # Adapt aggressiveness based on target response
    use_decoys: true       # Generate decoy traffic
    proxy_list: "./config/proxies.txt"

  # Parallel Execution
  parallel:
    max_workers: 2  # Low parallelism for stealth
    rate_limit: 10  # Requests per second

  # Output Configuration
  output:
    format: "json"
    directory: "./results/stealth_scan_{{.timestamp}}"

# Pipeline Stages
stages:
  # Stage 1: Passive Reconnaissance (Very Stealthy)
  - name: "passive_recon"
    description: "Passive information gathering without direct interaction"
    parallel: false
    steps:
      - module: "subdiscovery"
        config:
          target: "{{.target}}"
          passive_only: true
          sources:
            - "crtsh"
            - "wayback"
            - "alienvault"
          stealth_mode: true

      - module: "wayback"
        config:
          target: "{{.target}}"
          limit: 100
          filter_sensitive: true
          stealth_mode: true

  # Stage 2: Slow Port Scanning
  - name: "slow_scan"
    description: "Extremely slow and distributed port scanning"
    depends_on:
      - "passive_recon"
    parallel: false
    manual_approval: true  # Require approval before active scanning
    steps:
      - module: "portscan"
        config:
          targets: "{{.passive_recon.subdiscovery.results}}"
          scan_type: "stealth_syn"
          timing: "paranoid"  # Nmap T0 equivalent
          ports: "80,443,8080,8443"
          randomize_hosts: true
          fragment_packets: true
          decoy_hosts:
            - "192.168.1.100"
            - "10.0.0.50"
          max_retries: 1

  # Stage 3: WAF Detection & Evasion
  - name: "waf_evasion"
    description: "Detect and prepare evasion techniques for WAF/IPS"
    depends_on:
      - "slow_scan"
    parallel: false
    steps:
      - module: "waf_detection"
        config:
          targets: "{{.slow_scan.portscan.open_hosts}}"
          stealth_mode: true
          techniques:
            - "header_analysis"
            - "response_timing"
            - "error_detection"
          generate_bypass_rules: true

  # Stage 4: Adaptive Vulnerability Scanning
  - name: "adaptive_vuln_scan"
    description: "Vulnerability scanning with adaptive stealth based on WAF presence"
    depends_on:
      - "waf_evasion"
    parallel: false
    manual_approval: true
    steps:
      - module: "template_scan"
        config:
          targets: "{{.slow_scan.portscan.open_hosts}}"
          templates: 
            - "stealth/xss-reflected-encoded.yaml"
            - "stealth/sqli-time-based.yaml"
            - "stealth/xxe-blind.yaml"
            - "stealth/ssrf-blind.yaml"
          waf_bypass: "{{.waf_evasion.waf_detection.bypass_rules}}"
          encoding_layers: 3  # Multiple encoding layers
          payload_obfuscation: true
          use_time_delays: true
          adaptive_timing: true
          max_requests_per_host: 50
          rotate_techniques: true

  # Stage 5: Covert Data Exfiltration Testing
  - name: "covert_exfil"
    description: "Test for covert data exfiltration channels"
    depends_on:
      - "adaptive_vuln_scan"
    parallel: false
    steps:
      - module: "exfil_test"
        config:
          targets: "{{.adaptive_vuln_scan.template_scan.vulnerable_hosts}}"
          techniques:
            - "dns_tunneling"
            - "http_headers"
            - "timing_channel"
            - "steganography"
          stealth_mode: true
          use_encryption: true
          chunk_size: 64  # Small chunks to avoid detection

  # Stage 6: Persistence Testing (Ultra Stealth)
  - name: "persistence"
    description: "Test for persistence mechanisms"
    depends_on:
      - "covert_exfil"
    manual_approval: true
    parallel: false
    steps:
      - module: "persistence_test"
        config:
          targets: "{{.covert_exfil.exfil_test.successful_channels}}"
          techniques:
            - "webshell_variants"
            - "legitimate_service_abuse"
            - "scheduled_tasks"
          obfuscation_level: "maximum"
          test_duration: 3600  # 1 hour test
          beacon_interval: 900  # 15 minutes
          jitter: 300  # 5 minutes jitter

# Conditional Actions
conditions:
  - if: "{{.waf_evasion.waf_detection.waf_present}} == true"
    then:
      - module: "advanced_evasion"
        config:
          enable_all_bypasses: true
          use_residential_proxies: true
          fragment_size: 8
          
  - if: "{{.adaptive_vuln_scan.template_scan.high_severity_count}} > 0"
    then:
      - module: "alert"
        config:
          priority: "high"
          message: "High severity vulnerabilities found in stealth scan"

# Error Handling
on_error:
  - action: "log"
    level: "debug"  # Log quietly
  - action: "pause"
    duration: 60  # Pause for 1 minute on error
  - action: "rotate_proxy"  # Switch to different proxy on error

# Success Actions
on_success:
  - action: "secure_archive"
    config:
      encrypt: true
      shred_originals: true
  - action: "clean_traces"
    config:
      clear_logs: true
      remove_temp_files: true
  - action: "notify"
    channels:
      - "secure_channel"
    message: "Stealth scan completed successfully. No detection indicators observed."

# Stealth-Specific Rules
stealth_rules:
  # Timing Randomization
  request_timing:
    distribution: "gaussian"  # Natural-looking distribution
    base_delay: 5000
    variance: 2000
    
  # Header Randomization
  headers:
    pool_size: 50  # Number of different header combinations
    rotate_every: 10  # Rotate headers every N requests
    
  # Proxy Management
  proxy:
    health_check_interval: 300
    max_failures: 3
    prefer_residential: true
    countries:
      - "US"
      - "UK"
      - "DE"
      - "NL"
      - "CA"
    
  # Detection Response
  on_detection:
    - action: "halt"
      duration: 3600  # Stop for 1 hour
    - action: "change_profile"
      to: "ultra_stealth"
    - action: "notify"
      priority: "critical"
      
  # Traffic Patterns
  traffic:
    mimic_human: true
    browse_legitimate_pages: true
    follow_robots_txt: false  # Respect robots.txt to appear legitimate
    use_referrer_chains: true
    simulate_mouse_movements: true
    
  # Payload Strategies
  payloads:
    encoding_preference:
      - "unicode"
      - "url_double"
      - "html_entity"
      - "base64"
    chunking: true
    max_payload_size: 512
    
  # Session Management
  sessions:
    reuse_cookies: true
    maintain_state: true
    rotation_interval: 1800  # 30 minutes
    
  # Anti-Forensics
  anti_forensics:
    randomize_attack_order: true
    insert_benign_traffic: true
    cleanup_on_exit: true
    use_common_user_agents_only: true
    avoid_signature_patterns: true
